---
- hosts: master[0]
  become: true
  become_method: sudo
  tasks:
    - name: Generate the join command
      ansible.builtin.command: kubeadm token create --print-join-command
      register: join_command_output

    - name: Set the join command as a fact
      ansible.builtin.set_fact:
        join_command: "{{ join_command_output.stdout.split() | join(' ') }}"
    
    - name: Run kubeadm upload-certs on the primary (via VIP or host)
      become: true
      shell: kubeadm init phase upload-certs --upload-certs
      register: upload_certs
      changed_when: "'certificate key' in upload_certs.stdout"
      failed_when: upload_certs.rc != 0 and "'already uploaded' not in upload_certs.stderr"

    - name: Extract certificate key from output
      set_fact:
        kubeadm_certificate_key: "{{ (upload_certs.stdout | regex_search('(?mi)certificate key:\\s*(\\S+)', '\\1'))[0] }}"
      when: upload_certs.stdout is defined

    - name: Fail if we couldn't extract certificate key
      fail:
        msg: "Unable to extract kubeadm certificate key. Output: {{ upload_certs.stdout }} {{ upload_certs.stderr }}"
      when: kubeadm_certificate_key is not defined

- hosts: join[0]
  become: true
  become_method: sudo
  tasks:
    - name: Check if node is already joined
      stat:
        path: /etc/kubernetes/kubelet.conf
      register: kube_joined_status

    - name: Set the CRI Socket Path
      ansible.builtin.set_fact:
        cri_socket: "{{ {
          'Docker': 'unix:///var/run/cri-dockerd.sock',
          'Containerd': 'unix:///run/containerd/containerd.sock',
          'CRI-O': 'unix:///var/run/crio/crio.sock'
        }[cri] }}"

    - name: Verify etcd health before joining a new control-plane
      shell: kubectl get --raw='/readyz?verbose' | grep etcd
      register: etcd_health_prejoin
      retries: 20
      delay: 15
      until: etcd_health_prejoin.rc == 0
      delegate_to: "{{ groups['master'][0] }}"
      when:
        - not kube_joined_status.stat.exists

    - name: Join Master Nodes (except the first one)
      ansible.builtin.shell: >
        {{ hostvars[groups['master'][0]]['join_command'] }}
        --certificate-key {{ hostvars[groups['master'][0]]['kubeadm_certificate_key'] }}
        --cri-socket={{ cri_socket }}
        --control-plane
        --apiserver-advertise-address={{ ansible_host }}
        --apiserver-bind-port=6443
      when:
        - not kube_joined_status.stat.exists
      register: master_join_result

    - name: Wait until etcd cluster is healthy
      shell: "kubectl get --raw='/readyz?verbose' | grep etcd"
      register: etcd_health
      retries: 40
      delay: 15
      until: etcd_health.rc == 0
      delegate_to: "{{ groups['master'][0] }}"

    - name: Show Join Result Masters
      ansible.builtin.debug:
        var: master_join_result